#!/bin/bash

# Ensure proper usage of the script
if [ "$#" -lt 5 ]; then
    echo "Usage: $0 <alertCode> <message> <toEmail> <ccEmails> <business> [smtpServer] [smtpPort] [smtpUser] [smtpPassword]"
    exit 1
fi

# Arguments
ALERT_CODE="$1"
MESSAGE="$2"
TO_EMAIL="$3"
CC_EMAILS="$4"
BUSINESS="$5"

# Optional SMTP Configuration (can be overridden by parameters)
SMTP_SERVER="${6:-smtp.yourmailserver.com}"   # Default SMTP server if not passed
SMTP_PORT="${7:-587}"                         # Default SMTP port if not passed
SMTP_USER="${8:-your_email@example.com}"      # Default SMTP user if not passed
SMTP_PASSWORD="${9:-your_smtp_password}"      # Default SMTP password if not passed

# Email Information
FROM_EMAIL="$SMTP_USER"
SUBJECT="Alert: $ALERT_CODE - $BUSINESS"
BODY="Hello,\n\nThis is an automated notification for the alert code: $ALERT_CODE.\n\nMessage: $MESSAGE\n\nBusiness: $BUSINESS"

# Prepare the email content in the format accepted by SMTP
EMAIL_CONTENT="From: $FROM_EMAIL\nTo: $TO_EMAIL\nCc: $CC_EMAILS\nSubject: $SUBJECT\n\n$BODY"

# Function to send the email via SMTP
send_email() {
    # Establish SMTP connection using Netcat (nc)
    {
        echo "HELO $SMTP_SERVER"
        echo "AUTH LOGIN"
        echo -n "$SMTP_USER" | base64
        echo -n "$SMTP_PASSWORD" | base64
        echo "MAIL FROM:<$FROM_EMAIL>"
        echo "RCPT TO:<$TO_EMAIL>"
        echo "RCPT TO:<$CC_EMAILS>"
        echo "DATA"
        echo -e "$EMAIL_CONTENT"
        echo "."
        echo "QUIT"
    } | nc $SMTP_SERVER $SMTP_PORT
}

# Send the email
send_email

# Check if the email was sent successfully
if [ $? -eq 0 ]; then
    echo "Email sent successfully to $TO_EMAIL with CC to $CC_EMAILS."
else
    echo "Failed to send email to $TO_EMAIL with CC to $CC_EMAILS."
    exit 1
fi
