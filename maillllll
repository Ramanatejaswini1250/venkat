#!/bin/bash

# Load SMTP properties from the configuration file
SMTP_CONFIG_FILE="smtp_config.properties"
if [ ! -f "$SMTP_CONFIG_FILE" ]; then
  echo "SMTP configuration file not found!"
  exit 1
fi

# Read SMTP configuration from properties file
SMTP_HOST=$(grep -i 'smtp_host' $SMTP_CONFIG_FILE | cut -d '=' -f2)
SMTP_PORT=$(grep -i 'smtp_port' $SMTP_CONFIG_FILE | cut -d '=' -f2)
SMTP_USERNAME=$(grep -i 'smtp_username' $SMTP_CONFIG_FILE | cut -d '=' -f2)
SMTP_PASSWORD=$(grep -i 'smtp_password' $SMTP_CONFIG_FILE | cut -d '=' -f2)
FROM_EMAIL=$(grep -i 'from_email' $SMTP_CONFIG_FILE | cut -d '=' -f2)

# Define the email details from the script arguments
ALERT_CODE=$1
MESSAGE=$2
TO_EMAIL=$3
CC_EMAIL=$4
BUSINESS=$5

# Validate input parameters
if [ -z "$TO_EMAIL" ]; then
  echo "Error: No recipient email provided."
  exit 1
fi

# Define the subject and body of the email
TO_ADDRESS="$TO_EMAIL"
SUBJECT="Alert Code: $ALERT_CODE"
BODY="Business: $BUSINESS"

# Define the email content
EMAIL_CONTENT=$(cat <<EOF
To: $TO_ADDRESS
Subject: $SUBJECT
CC: $CC_EMAIL

$BODY

$MESSAGE

************ IMPORTANT MESSAGE ************
This e-mail message is intended only for the addressee(s) and contains information which may be confidential.
If you are not the intended recipient please advise the sender by return email, do not use or disclose the contents,
and delete the message and any attachments from your system.
EOF
)

# Remove the disclaimer from the email content
DISCLAIMER_START="************ IMPORTANT MESSAGE ************"
DISCLAIMER_END="************ END OF MESSAGE ************"

PROCESSED_CONTENT=$(echo "$EMAIL_CONTENT" | awk -v start="$DISCLAIMER_START" -v end="$DISCLAIMER_END" '
{
    if (index($0, start)) {
        remove = 1;  # Start removing disclaimer
    }
    if (!remove) {
        print $0;  # Print lines not part of the disclaimer
    }
    if (remove && index($0, end)) {
        remove = 0;  # Stop removing disclaimer
    }
}')

# Send the processed email using msmtp
echo "$PROCESSED_CONTENT" | msmtp --host=$SMTP_HOST --port=$SMTP_PORT --auth=on --user=$SMTP_USERNAME --password=$SMTP_PASSWORD --from=$FROM_EMAIL $TO_EMAIL

# Check if msmtp ran successfully
if [ $? -eq 0 ]; then
  echo "Email sent to $TO_EMAIL and CC: $CC_EMAIL"
else
  echo "Failed to send email"
fi
