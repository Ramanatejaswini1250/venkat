import java.time.LocalTime

// Get the current hour (24-hour format)
val currentHour = LocalTime.now().getHour

// Function to send missed alert emails
def sendMissedAlertEmails(alerts: Set[String], cutoffTime: String): Unit = {
  if (alerts.nonEmpty) {
    alerts.foreach { alertCode =>
      businessContactsMap.get(alertCode) match {
        case Some((business, emailAddress)) if emailAddress.nonEmpty =>
          val subject = s"ðŸ”´ Missed Alert Notification: $alertCode"
          val emailBody =
            s"""
            |<p>The alert <b style="color:red;">$alertCode</b> was scheduled for today but did not arrive.</p>
            |<p>Could you please check and confirm if this is expected?</p>
            |<p>Business Unit: <b>$business</b></p>
            |<p>Cutoff Time: <b>$cutoffTime AEST</b></p>
            """.stripMargin

          sendEmail(emailAddress, subject, emailBody, "")
          println(s"Sent missed alert email to $emailAddress for alert code: $alertCode")
          
        case _ =>
          println(s"Warning: No email found for alert code: $alertCode")
      }
    }
  }
}

// Identify missed alerts based on frequency
val missedDailyAlerts = missedAlerts.filter(alertCode => alertFrequencyMap.getOrElse(alertCode, "m") == "d")
val missedOtherAlerts = missedAlerts.filter(alertCode => Set("w", "m").contains(alertFrequencyMap.getOrElse(alertCode, "m")))

// Send emails at the correct hour
if (currentHour == 13) {
  sendMissedAlertEmails(missedDailyAlerts, "1:00 PM")
} else if (currentHour == 16) {
  sendMissedAlertEmails(missedOtherAlerts, "4:00 PM")
}
