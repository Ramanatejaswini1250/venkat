val expectedAlertsDF = spark.read
  .format("jdbc")
  .option("url", jdbcUrl)
  .option("dbtable", "etl_info")
  .option("user", dbUser)
  .option("password", dbPassword)
  .load()
  .where("frequency = 'd'")
  .select("alert_code")

val processedBefore4PMDF = spark.read
  .format("jdbc")
  .option("url", jdbcUrl)
  .option("dbtable", "alert_archive")
  .option("user", dbUser)
  .option("password", dbPassword)
  .load()
  .where(s"date_to_load = '$todayDate' AND check_datetime < '16:00:00'")
  .select("alert_code")



val missedAlertsDF = expectedAlertsDF
  .join(processedBefore4PMDF, Seq("alert_code"), "left_anti")
  .union(missingInfoDF) // Add missing frequency/source table alerts
