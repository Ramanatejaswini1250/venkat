import java.io.File
import java.text.SimpleDateFormat
import java.util.Calendar

object RampAutomationExecution {

  def main(args: Array[String]): Unit = {
    val dateFormat = new SimpleDateFormat("yyyy-MM-dd")
    val today = dateFormat.format(Calendar.getInstance().getTime)
    val flagFile = new File(s"/path/to/flags/consolidated_email_sent_$today.flag")

    // Check if flag already exists
    if (!flagFile.exists()) {
      val calendar = Calendar.getInstance()
      val currentHour = calendar.get(Calendar.HOUR_OF_DAY)

      // Proceed only if the current time is 4:00 PM or later
      if (currentHour >= 16) {
        sendConsolidatedEmail()
        flagFile.createNewFile() // Mark the email as sent for the day
        println(s"Sent consolidated email for $today at 4:00 PM or later.")
      } else {
        println(s"Skipping consolidated email. Current hour: $currentHour, waiting for 4 PM.")
      }
    } else {
      println(s"Consolidated email already sent for $today. Skipping.")
    }

    // Stop Spark or complete other logic if necessary
    spark.stop()
  }

  def sendConsolidatedEmail(): Unit = {
    // Your email-sending logic
    println("Sending consolidated email...")
  }
}
