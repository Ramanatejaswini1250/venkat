// Find the minimum size between MasterTable2DF and Master2CSVrows
val rowsToCompare = math.min(MasterTable2DF.size, Master2CSVrows.size)

var dataConsistent = true  // Track if all rows match

for (i <- 0 until rowsToCompare) {
    if (MasterTable2DF(i) != Master2CSVrows(i)) {
        println(s"❌ Mismatch found at row $i:")
        println(s"   MasterTable2DF: ${MasterTable2DF(i)}")
        println(s"   Master2CSVrows: ${Master2CSVrows(i)}")
        dataConsistent = false
    }
}

// Check for extra rows in either dataset
if (MasterTable2DF.size > Master2CSVrows.size) {
    println(s"⚠️ WARNING: MasterTable2DF has extra ${MasterTable2DF.size - Master2CSVrows.size} rows.")
} else if (MasterTable2DF.size < Master2CSVrows.size) {
    println(s"⚠️ WARNING: Master2CSVrows has extra ${Master2CSVrows.size - MasterTable2DF.size} rows.")
}

// Final message on consistency
if (dataConsistent && MasterTable2DF.size == Master2CSVrows.size) {
    println("✅ Data is fully consistent between MasterTable2DF and Master2CSVrows.")
} else {
    println("❌ Data inconsistency detected! Please check the mismatched rows.")
}
