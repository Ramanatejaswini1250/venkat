df.foreachPartition { partition =>
  // Establish JDBC connection for each partition (same as your original code)
  var conn: Connection = null
  var stmt_rss: Statement = null
  var resultSet: ResultSet = null
  val rows = new ListBuffer[String]()

  try {
    conn = DriverManager.getConnection(url, user, password)
    stmt_rss = conn.createStatement()
    resultSet = stmt_rss.executeQuery("SELECT * FROM your_table")

    // Process the ResultSet
    while (resultSet.next()) {
      val eventTimestamp = resultSet.getString(4)
      val alertDueDate = resultSet.getString(6)

      // Format the event_timestamp and alert_due_date
      val formattedEventTimestamp = if (eventTimestamp != null) {
        LocalDateTime.parse(eventTimestamp, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
          .format(DateTimeFormatter.ofPattern("dd-MM-yyyy hh:mm:ss a"))
      } else {
        "Unknown"
      }

      val formattedAlertDueDate = if (alertDueDate != null) {
        LocalDateTime.parse(alertDueDate, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
          .format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"))
      } else {
        "Unknown"
      }

      // Create a CSV row and add it to ListBuffer
      val transformedRow = s"${resultSet.getString(1)},${resultSet.getString(2)},${resultSet.getString(3)},$formattedEventTimestamp,${resultSet.getInt(5)},$formattedAlertDueDate"
      rows += transformedRow
    }

    // Write rows to CSV file for this partition (using BufferedWriter)
    val outputPath = "/path/to/output/formatted_data.csv"
    val writer = new BufferedWriter(new FileWriter(outputPath, true)) // true for append mode

    try {
      // Write all rows from the ListBuffer to CSV
      for (row <- rows) {
        writer.write(row)
        writer.newLine()
      }
    } finally {
      writer.close()
    }

  } catch {
    case e: Exception =>
      println(s"An error occurred: ${e.getMessage}")
  } finally {
    if (resultSet != null) resultSet.close()
    if (stmt_rss != null) stmt_rss.close()
    if (conn != null) conn.close()
  }
}

println("Data has been saved to CSV successfully.")
