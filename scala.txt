def waitForTargetTime(targetHour: Int, targetMin: Int): Unit = {
  val calNow = Calendar.getInstance(aestZone)
  val currentHour = calNow.get(Calendar.HOUR_OF_DAY)
  val currentMin = calNow.get(Calendar.MINUTE)

  if (currentHour > targetHour || (currentHour == targetHour && currentMin >= targetMin)) {
    println("Target time reached. Proceeding with email...")
    return // Exit the method when the target time is met
  }

  val now = System.currentTimeMillis()
  val calTarget = Calendar.getInstance(aestZone)
  calTarget.set(Calendar.HOUR_OF_DAY, targetHour)
  calTarget.set(Calendar.MINUTE, targetMin)
  calTarget.set(Calendar.SECOND, 0)
  calTarget.set(Calendar.MILLISECOND, 0)

  if (calTarget.getTimeInMillis < now) {
    calTarget.add(Calendar.DATE, 1) // Move to the next day if time has already passed
  }

  val waitMillis = calTarget.getTimeInMillis - now
  println(s"Waiting for ${(waitMillis / 1000)} seconds until $targetHour:$targetMin AEST...")

  Thread.sleep(waitMillis)
}
