class TupleSetAccumulator extends AccumulatorV2[(String, Int), Set[(String, Int)]] {
  private var _set: Set[(String, Int)] = Set.empty

  override def isZero: Boolean = _set.isEmpty

  override def copy(): AccumulatorV2[(String, Int), Set[(String, Int)]] = {
    val newAcc = new TupleSetAccumulator()
    newAcc._set = this._set
    newAcc
  }

  override def reset(): Unit = _set = Set.empty

  override def add(v: (String, Int)): Unit = {
    _set += v
  }

  override def merge(other: AccumulatorV2[(String, Int), Set[(String, Int)]]): Unit = {
    _set ++= other.value
  }

  override def value: Set[(String, Int)] = _set
}
