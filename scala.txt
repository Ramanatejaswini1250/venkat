import scala.collection.JavaConverters._

businessContactsMap.get(alertCode) match {
  case Some((business, rawEmailArray, frequency: String)) if frequencyFilter.contains(frequency) =>
    
    val emailArray: Array[String] = 
      if (rawEmailArray == null) {
        Array.empty[String] // Handle null values safely
      } else if (rawEmailArray.isInstanceOf[String]) {
        Array(rawEmailArray.asInstanceOf[String]) // Convert single String to Array[String]
      } else if (rawEmailArray.isInstanceOf[java.util.List[_]]) {
        rawEmailArray.asInstanceOf[java.util.List[_]].asScala.collect { case s: String => s }.toArray
      } else if (rawEmailArray.isInstanceOf[Array[_]]) {
        rawEmailArray.asInstanceOf[Array[_]].collect { case s: String => s }
      } else {
        Array.empty[String] // Handle unexpected types
      }

    val emailAddress = emailArray.mkString(",")

    // Debugging output
    println(s"DEBUG: rawEmailArray = $rawEmailArray, Type: ${Option(rawEmailArray).map(_.getClass).getOrElse("null")}")
    println(s"DEBUG: Final emailAddress = $emailAddress")
}
