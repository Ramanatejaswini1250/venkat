import org.apache.commons.dbcp2.BasicDataSource

// 1. Create a connection pool (this happens in the driver)
val dataSource = new BasicDataSource()
dataSource.setUrl("jdbc:mysql://localhost:3306/db")
dataSource.setUsername("user")
dataSource.setPassword("password")
dataSource.setMaxTotal(10)  // Maximum number of connections in the pool

// 2. Access the pool inside the foreachPartition
df.foreachPartition { partition =>
  // Get a connection from the pool
  val conn_rss = dataSource.getConnection()
  
  try {
    partition.foreach { row =>
      val stmt_rss = conn_rss.prepareStatement("INSERT INTO my_table (column1, column2) VALUES (?, ?)")
      stmt_rss.setString(1, row.getAs[String]("column1"))
      stmt_rss.setInt(2, row.getAs[Int]("column2"))
      stmt_rss.executeUpdate()
    }
  } finally {
    // Make sure to return the connection to the pool
    conn_rss.close()
  }
}

// 3. Access the pool outside of foreachPartition
val conn_test = dataSource.getConnection()
try {
  // Do some other operations with the connection if needed
  val stmt_test = conn_test.createStatement()
  // Your query here...
} finally {
  conn_test.close()  // Close when done
}
