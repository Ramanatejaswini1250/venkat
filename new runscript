try {
  println("Establishing database connection...")
  val connection: Connection = DriverManager.getConnection(jdbcUrl, jdbcUser, jdbcPassword)
  println("Connection established.")
  
  val statement: Statement = connection.createStatement()

  println("Reading SQL script...")
  val lines = Files.readAllLines(Paths.get(scriptPath)).asScala.toList
  println(s"Total lines in script: ${lines.size}")

  val validLines = lines
    .drop(4)
    .dropRight(3)
    .filterNot(_.contains(".IF ERRORCODE <> 0 THEN .GOTO ERROR;"))
    .map(_.trim)

  println("Filtered lines to execute:")
  validLines.foreach(println)

  val commandBuffer = new StringBuilder

  for (line <- validLines) {
    if (line.nonEmpty && !line.startsWith("--")) {
      commandBuffer.append(line).append(" ")

      if (line.endsWith(";")) {
        val command = commandBuffer.toString().trim
        try {
          println(s"Executing command: $command")
          statement.execute(command)
          println(s"Command executed successfully: $command")
        } catch {
          case ex: Exception =>
            println(s"Error executing command: $command")
            println(s"Error message: ${ex.getMessage}")
        }
        commandBuffer.clear()
      }
    }
  }

  statement.close()
  connection.close()
} catch {
  case ex: Exception =>
    println(s"Fatal error: ${ex.getMessage}")
    ex.printStackTrace()
}
